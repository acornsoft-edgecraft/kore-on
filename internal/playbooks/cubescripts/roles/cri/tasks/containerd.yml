---
# For ubuntu
- name: Install containerd (Ubuntu, Debian)
  when:
    - ansible_distribution in ["Ubuntu", "Debian"]
  apt:
    name: "{{ containerd_pkg }}"
    state: present

- name: Hold containerd version
  when: ansible_os_family in ["Ubuntu", "Debian"]
  dpkg_selections:
    name: containerd.io
    selection: hold

- name: Install containerd (Centos, RedHat)
  when:
    - ansible_distribution in ["CentOS", "RedHat"]
    - not closed_network
  yum:
    name: "{{ containerd_pkg }}"
    state: present
    update_cache: yes
    enablerepo: Docker-CE-Stable
    disable_gpg_check: yes

- name: Install containerd (Centos, RedHat)
  when:
    - ansible_distribution in ["CentOS", "RedHat"]
    - closed_network
  yum:
    name: "{{ containerd_pkg }}"
    state: present

# https://github.com/kubernetes-sigs/cri-tools/releases/download/v1.21.0/crictl-v1.21.0-linux-amd64.tar.gz
- name: Get crictl tgz file and uncompress it
  unarchive:
    src: "crictl-{{ crictl_version }}-{{ ansible_system | lower }}-amd64.tar.gz"
    dest: /usr/bin
    owner: "root"
    group: "root"

- name: Create containerd directory
  file:
    path: /etc/containerd
    state: directory

- name: Copy containerd config file
  template:
    src: config-1.4.toml.j2
    dest: "/etc/containerd/config.toml"
    owner: "root"
    mode: 0644

- name: Enable containerd
  systemd:
    name: containerd
    state: restarted
    daemon_reload: yes
    enabled: yes

- name: Configure crictl.yaml
  copy:
    dest: /etc/crictl.yaml
    content: |-
      runtime-endpoint: unix:///run/containerd/containerd.sock
      image-endpoint: unix:///run/containerd/containerd.sock
      timeout: 10
