---
- hosts: localhost
  connection: local
  gather_facts: false
  become: no
  vars:
    - tmppath: "/Users/dongmook/github-workspace/edgecraft/kore-on/tmp/"
    - server_hostname: metrics-server
    - key_size: 4096
    - secret_ca_passphrase: # Set if you want passphrase
    - key_type: RSA # Others include DSA, ECC, Ed25519, Ed448, X25519, X448
    - country_name: KE
    - dns_server:
        - metrics-server
        - metrics-server.kube-system
        - metrics-server.kube-system.svc
        - metrics-server.kube-system.svc.cluster
  tasks:
  - name: Remove file (delete file)
    ansible.builtin.file:
      path: "{{ tmppath }}"
      state: absent
  - name: Remove file (delete file)
    ansible.builtin.file:
      path: "{{ tmppath }}"
      state: directory

  - name: Create private key with password protection
    community.crypto.openssl_privatekey:
      path: "{{ tmppath }}ca.key"
      # passphrase: None
      mode: "640"
      size: "{{ key_size }}"
      type: "{{ key_type }}"
      backup: yes
    register: privatekey

  - name: Create certificate signing request (CSR) for CA certificate
    community.crypto.openssl_csr:
      path: "{{ tmppath }}ca.csr"
      privatekey_path: "{{ privatekey.filename }}"
      # privatekey_passphrase: "{{ secret_ca_passphrase }}"
      common_name: "extension-api-servers-ca"
      use_common_name_for_san: false  # since we do not specify SANs, don't use CN as a SAN
      mode: "640"
      basic_constraints:
        - 'CA:TRUE'
      basic_constraints_critical: yes
      key_usage:
        - keyCertSign
      key_usage_critical: true
    register: ca_csr


  - debug:
      msg: "{{ ca_csr }}"

  - name: Create self-signed CA certificate from CSR
    community.crypto.x509_certificate:
      path: "{{ tmppath }}ca.crt"
      csr_path: "{{ tmppath }}ca.csr"
      privatekey_path: "{{ tmppath }}ca.key"
      # privatekey_passphrase: "{{ secret_ca_passphrase }}"
      provider: selfsigned
      selfsigned_not_after: "+{{cert_validity_days}}d"
      mode: "644"
  

  - name: Create private key with password protection
    community.crypto.openssl_privatekey:
      path: "{{ tmppath }}metrics-server.key"
      # passphrase: None
      mode: "640"
      size: "{{ key_size }}"
      type: "{{ key_type }}"
      backup: yes
    register: privatekey
    
  - name: Create certificate signing request (CSR) for new certificate
    community.crypto.openssl_csr:
      path: "{{ tmppath }}metrics-server.csr"
      privatekey_path: "{{ tmppath }}metrics-server.key"
      subject_alt_name: "{{ item.value | map('regex_replace', '^', 'DNS:') | list }}"
    with_dict:
      dns_server: "{{ dns_server }}"
    register: csr
  
  - name: Sign certificate with our CA
    community.crypto.x509_certificate:
      path: "{{ tmppath }}metrics-server.crt"
      csr_path: "{{ tmppath }}metrics-server.csr"
      provider: ownca
      ownca_path: "{{ tmppath }}ca.crt"
      ownca_privatekey_path: "{{ tmppath }}ca.key"
      ownca_not_after: "+{{cert_validity_days}}d" # valid for one year
    register: certificate