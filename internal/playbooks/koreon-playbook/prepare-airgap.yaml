---
# This playbook deploys a kubernetes cluster with platform applications
# Init generate inventory and vars
- hosts: localhost
  gather_facts: false
  tasks:
    - name: Init | Configuration
      ansible.builtin.include_role:
        name: init
        apply:
          tags:
            - init
      tags:
        - bootstrap-os
  any_errors_fatal: true

# Clear gathered facts from all currently targeted hosts 
- hosts: all
  become: true
  gather_facts: false
  tasks:
    - name: Clear gathered facts
      meta: clear_facts
      tags:
        - bootstrap-os

# Pre-installation check network.
- hosts: all
  become: false
  gather_facts: true
  vars_files:
    - "{{ playbook_dir }}/inventory/group_vars/basic.yaml"
    - "{{ playbook_dir }}/inventory/group_vars/expert.yaml"
  tasks:
    - name: Init | Network check
      ansible.builtin.include_role:
        name: init/network
        apply:
          tags:
            - bootstrap-os
      tags:
        - bootstrap-os
  any_errors_fatal: true

# Configure system package repository
- hosts: all
  become: true
  gather_facts: false
  vars_files:
    - "{{ playbook_dir }}/inventory/group_vars/basic.yaml"
    - "{{ playbook_dir }}/inventory/group_vars/expert.yaml"
  tasks:
    - name: Bootstrap OS
      ansible.builtin.include_role:
        name: bootstrap-os/{{ ansible_distribution | lower }}
        apply:
          tags:
            - bootstrap-os
      tags:
        - bootstrap-os
      when:
        - ansible_distribution is defined
        - not ansible_distribution in ["CentOS"]
  any_errors_fatal: true

## Configure system package repository
- hosts: all
  become: true
  gather_facts: false
  vars_files:
    - "{{ playbook_dir }}/inventory/group_vars/basic.yaml"
    - "{{ playbook_dir }}/inventory/group_vars/expert.yaml"
  tasks:
    - name: Bootstrap OS
      ansible.builtin.include_role:
        name: bootstrap-os/{{ ansible_distribution | lower }}-{{ ansible_distribution_release | lower }}
        apply:
          tags:
            - bootstrap-os
      tags:
        - bootstrap-os
      when:
        - ansible_distribution is defined
        - ansible_distribution in ["CentOS"]
  any_errors_fatal: true

# The pre-preparation stage of the air gap network.
- hosts: prepare_airgap
  become: true
  gather_facts: false
  vars_files:
    - "{{ playbook_dir }}/inventory/group_vars/basic.yaml"
    - "{{ playbook_dir }}/inventory/group_vars/expert.yaml"
    - "{{ playbook_dir }}/inventory/group_vars/images.yaml"
    - "{{ playbook_dir }}/inventory/group_vars/packages.yaml"
  tasks:
    - name: Install docker for registry
      ansible.builtin.include_role:
        name: cri/{{ ansible_distribution | lower }}
        apply:
          tags:
            - cri
      vars:
        param: "registry"
    - name: Registry | Installation \ Local Repository
      ansible.builtin.include_role:
        name: prepare-airgap/registry
        apply:
          tags:
            - prepare-airgap  
    - name: Package download
      ansible.builtin.include_role:
        name: prepare-airgap/package/{{ ansible_distribution | lower }}
        apply:
          tags:
            - package-download
      tags:
        - package-download
    - name: Create Installer Image
      ansible.builtin.include_role:
        name: prepare-airgap/registry
        tasks_from: create-installer-image.yaml
        apply:
          tags:
            - create-installer-image
      tags:
        - create-installer-image
  any_errors_fatal: true