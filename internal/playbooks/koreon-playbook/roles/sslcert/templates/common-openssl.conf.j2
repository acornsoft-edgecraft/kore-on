[ req ]
distinguished_name = req_distinguished_name
[req_distinguished_name]

[ v3_ca ]
basicConstraints = critical, CA:TRUE
keyUsage = critical, digitalSignature, keyEncipherment, keyCertSign

[ v3_req_server ]
basicConstraints = CA:FALSE
keyUsage = critical, digitalSignature, keyEncipherment
extendedKeyUsage = serverAuth

[ v3_req_client ]
basicConstraints = CA:FALSE
keyUsage = critical, digitalSignature, keyEncipherment
extendedKeyUsage = clientAuth

[ v3_req_apiserver ]
basicConstraints = CA:FALSE
keyUsage = critical, digitalSignature, keyEncipherment
extendedKeyUsage = serverAuth
subjectAltName = @alt_names_cluster

[ v3_req_metricsserver ]
basicConstraints = CA:FALSE
keyUsage = critical, digitalSignature, keyEncipherment
extendedKeyUsage = serverAuth
subjectAltName = @alt_metircs_server

[ alt_metircs_server ]
DNS.1 = metrics-server
DNS.2 = metrics-server.kube-system
DNS.3 = metrics-server.kube-system.svc
DNS.4 = metrics-server.kube-system.svc.cluster.local
DNS.5 = localhost
IP.1 = 127.0.0.1

[ alt_names_cluster ]
DNS.1 = kubernetes
DNS.2 = kubernetes.default
DNS.3 = kubernetes.default.svc
DNS.4 = kubernetes.default.svc.cluster.local
DNS.5 = localhost
DNS.6 = {{ ansible_nodename }}
{# add domain - lb_ip #}
{% if not lb_ip | ansible.utils.ipaddr -%}
DNS.7 = {{ lb_ip }}
{% endif -%}
{# add domain - api_sans #}
{% for san in api_sans -%}
{%   set idx = loop.index  %}
{% if not san | ansible.utils.ipaddr -%}
DNS.{{ idx+7 }} = {{ san }}
{% endif -%}
{%   if not loop.last -%}{%- endif -%}
{% endfor %}
IP.1 = 127.0.0.1
IP.2 = {{ kubernetes_service_ip }}
{# add ip - lb_ip #}
{% set idx_count = 2 %}
{% set last_idx = namespace(count=0) %}
{% if lb_ip | ansible.utils.ipaddr and master_ip[0] != lb_ip -%}
{% set idx_count = idx_count + 1 %}
IP.{{ idx_count }} = {{ lb_ip }}
{% endif -%}
{# add ip - master_ip #}
{% for ip in master_ip -%}
{%   set idx = loop.index %}
{% if ip | ansible.utils.ipaddr -%}
{%   set idx_count = idx + idx_count %}
{%   set last_idx.count = idx_count %}
IP.{{ idx_count }} = {{ ip }}
{% endif -%}
{% endfor %}
{# add ip - api_sans #}
{% for san in api_sans -%}
{%   set idx = loop.index  %}
{% if san | ansible.utils.ipaddr -%}
{%   set idx_count = idx + last_idx.count %}
IP.{{ idx_count }} = {{ san }}
{% endif -%}
{% endfor %}