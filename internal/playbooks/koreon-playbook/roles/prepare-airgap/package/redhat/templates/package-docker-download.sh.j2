#!/bin/bash

CURRENT_DATE=`date '+%Y%m%d'`
CURRENT_TIME=`date '+%Y%m%d_%H%M%S'`

K8S_VERIONS="-{{ prepare_airgap_k8s_version | regex_replace('^v', '') }}"
REPO_DIR="{{ package_data_dir }}"
ARCHIVE_DIR="{{ package_archive_dir }}"

error_exit() {
    echo "error: ${1:-"unknown error"}" 1>&2
    exit 1
}

make_yum_repo(){
    cd "$REPO_DIR"

    yumdownloader --resolve --enablerepo=Docker-CE-Stable --arch x86_64 --downloaddir=./ docker-ce docker-ce-cli
}

make_apt_repo(){
    if [ "$K8S_VERIONS" != "" ]; then
        K8S_VERIONS=-$(echo $K8S_VERIONS | sed 's/^v//')
    fi
    cd "$REPO_DIR"

    apt-get -y update
    apt-get install -y -d --reinstall -o Dir::cache=$repo_dir -o Dir::Cache::archives="./" docker-ce
    apt-get install -y -d --reinstall -o Dir::cache=$repo_dir -o Dir::Cache::archives="./" docker-ce-cli

    rm -rf lock partial pkgcache.bin srcpkgcache.bin Packages.gz

    dpkg-scanpackages -m . | gzip -c > Packages.gz
}


create_tarball() {
 	cd $REPO_DIR
    tar --exclude archive -zcvf $ARCHIVE_DIR/docker.$CURRENT_TIME.tgz ./
}


main() {

    for var in `grep -ri "ID" /etc/os-release`
    do
    KEY=$(echo $var | cut -f1 -d=)
    VALUE=$(echo $var | cut -f2 -d= | sed 's/\"//g;s/platform\://')

    case "$KEY" in
        ID)                 ID=${VALUE} ;;
        ID_LIKE)            ID_LIKE=${VALUE} ;;
        VERSION_ID)         VERSION_ID=${VALUE} ;;
        PLATFORM_ID)        PLATFORM_ID=${VALUE} ;;
        *)
    esac
    done

    if [ "$ID" == "centos" ]; then
        make_yum_repo
    fi

    if [ "$ID" == "rhel" ]; then
        make_yum_repo
    fi

    if [ "$ID" == "ubuntu" ]; then
        make_apt_repo
    fi

    create_tarball

    echo "Completed"
}

main "${@}"