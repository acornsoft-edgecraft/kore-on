---
apiVersion: v1
kind: Namespace
metadata:
  labels:
    control-plane: controller-manager
  name: capi-microk8s-control-plane-system
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.10.0
  creationTimestamp: null
  labels:
    cluster.x-k8s.io/provider: control-plane-microk8s
    cluster.x-k8s.io/v1beta1: v1beta1
  name: microk8scontrolplanes.controlplane.cluster.x-k8s.io
spec:
  group: controlplane.cluster.x-k8s.io
  names:
    categories:
    - cluster-api
    kind: MicroK8sControlPlane
    listKind: MicroK8sControlPlaneList
    plural: microk8scontrolplanes
    shortNames:
    - mcp
    singular: microk8scontrolplane
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: MicroK8sControlPlane API Server is ready to receive requests
      jsonPath: .status.ready
      name: Ready
      type: boolean
    - description: This denotes whether or not the control plane has the uploaded
        microk8s-config configmap
      jsonPath: .status.initialized
      name: Initialized
      type: boolean
    - description: Total number of non-terminated machines targeted by this control
        plane
      jsonPath: .status.replicas
      name: Replicas
      type: integer
    - description: Total number of fully running and ready control plane machines
      jsonPath: .status.readyReplicas
      name: Ready Replicas
      type: integer
    - description: Total number of unavailable machines targeted by this control plane
      jsonPath: .status.unavailableReplicas
      name: Unavailable Replicas
      type: integer
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: MicroK8sControlPlane is the Schema for the microk8scontrolplanes
          API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: MicroK8sControlPlaneSpec defines the desired state of MicroK8sControlPlane
            properties:
              controlPlaneConfig:
                description: ControlPlaneConfig is the reference configs to be used
                  for initializing and joining machines to the control plane.
                properties:
                  clusterConfiguration:
                    description: InitConfiguration along with ClusterConfiguration
                      are the configurations necessary for the init command
                    properties:
                      apiVersion:
                        description: 'APIVersion defines the versioned schema of this
                          representation of an object. Servers should convert recognized
                          schemas to the latest internal value, and may reject unrecognized
                          values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                        type: string
                      kind:
                        description: 'Kind is a string value representing the REST
                          resource this object represents. Servers may infer this
                          from the endpoint the client submits requests to. Cannot
                          be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                        type: string
                      portCompatibilityRemap:
                        default: true
                        description: PortCompatibilityRemap switches the default ports
                          used by cluster agent (25000) and dqlite (19001) to 30000
                          and 2379. The default ports are blocked via security groups
                          in several infra providers.
                        type: boolean
                    type: object
                  initConfiguration:
                    properties:
                      IPinIP:
                        description: The optional IPinIP configuration
                        type: boolean
                      addons:
                        description: List of addons to be enabled upon cluster creation
                        items:
                          type: string
                        type: array
                      apiVersion:
                        description: 'APIVersion defines the versioned schema of this
                          representation of an object. Servers should convert recognized
                          schemas to the latest internal value, and may reject unrecognized
                          values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                        type: string
                      confinement:
                        description: The confinement (strict or classic) configuration
                        enum:
                        - classic
                        - strict
                        type: string
                      extraKubeletArgs:
                        description: ExtraKubeletArgs is a list of extra arguments
                          to add to the kubelet.
                        items:
                          type: string
                        type: array
                      extraWriteFiles:
                        description: ExtraWriteFiles is a list of extra files to inject
                          with cloud-init.
                        items:
                          description: CloudInitWriteFile is a file that will be injected
                            by cloud-init
                          properties:
                            content:
                              description: Content of the file to create.
                              type: string
                            owner:
                              description: Owner of the file to create, e.g. "root:root"
                              type: string
                            path:
                              description: Path where the file should be created.
                              type: string
                            permissions:
                              description: Permissions of the file to create, e.g.
                                "0600"
                              type: string
                          required:
                          - content
                          - owner
                          - path
                          - permissions
                          type: object
                        type: array
                      httpProxy:
                        description: The optional http proxy configuration
                        type: string
                      httpsProxy:
                        description: The optional https proxy configuration
                        type: string
                      joinTokenTTLInSecs:
                        default: 315569260
                        description: The join token will expire after the specified
                          seconds, defaults to 10 years
                        format: int64
                        minimum: 1
                        type: integer
                      kind:
                        description: 'Kind is a string value representing the REST
                          resource this object represents. Servers may infer this
                          from the endpoint the client submits requests to. Cannot
                          be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                        type: string
                      noProxy:
                        description: The optional no proxy configuration
                        type: string
                      riskLevel:
                        default: stable
                        description: The risk-level (stable, candidate, beta, or edge)
                          for the snaps
                        enum:
                        - stable
                        - candidate
                        - beta
                        - edge
                        type: string
                    type: object
                type: object
              machineTemplate:
                description: MachineTemplate is the machine template to be used for
                  creating control plane machines.
                properties:
                  infrastructureTemplate:
                    description: InfrastructureTemplate is a required reference to
                      a custom resource offered by an infrastructure provider.
                    properties:
                      apiVersion:
                        description: API version of the referent.
                        type: string
                      fieldPath:
                        description: 'If referring to a piece of an object instead
                          of an entire object, this string should contain a valid
                          JSON/Go field access statement, such as desiredState.manifest.containers[2].
                          For example, if the object reference is to a container within
                          a pod, this would take on a value like: "spec.containers{name}"
                          (where "name" refers to the name of the container that triggered
                          the event) or if no container name is specified "spec.containers[2]"
                          (container with index 2 in this pod). This syntax is chosen
                          only to have some well-defined way of referencing a part
                          of an object. TODO: this design is not final and this field
                          is subject to change in the future.'
                        type: string
                      kind:
                        description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                        type: string
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                        type: string
                      namespace:
                        description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                        type: string
                      resourceVersion:
                        description: 'Specific resourceVersion to which this reference
                          is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                        type: string
                      uid:
                        description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                        type: string
                    type: object
                    x-kubernetes-map-type: atomic
                required:
                - infrastructureTemplate
                type: object
              replicas:
                description: Replicas is the desired number of control-plane machine
                  replicas.
                format: int32
                type: integer
              upgradeStrategy:
                description: 'UpgradeStrategy describes how to replace existing machines
                  with new ones. Values can be: InPlaceUpgrade, RollingUpgrade or
                  SmartUpgrade.'
                enum:
                - InPlaceUpgrade
                - RollingUpgrade
                - SmartUpgrade
                type: string
              version:
                description: Version defines the desired Kubernetes version.
                minLength: 2
                pattern: ^v(0|[1-9][0-9]*)\.(0|[1-9][0-9]*)\.(0|[1-9][0-9]*)([-0-9a-zA-Z_\.+]*)?$
                type: string
            required:
            - machineTemplate
            - version
            type: object
          status:
            description: MicroK8sControlPlaneStatus defines the observed state of
              MicroK8sControlPlane
            properties:
              bootstrapped:
                description: Bootstrapped denotes whether any nodes received bootstrap
                  request which is required to start etcd and Kubernetes components
                  in MicroK8s.
                type: boolean
              conditions:
                description: Conditions defines current service state of the MicroK8sControlPlane.
                items:
                  description: Condition defines an observation of a Cluster API resource
                    operational state.
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.
                        If that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    severity:
                      description: Severity provides an explicit classification of
                        Reason code, so the users or machines can immediately understand
                        the current situation and act accordingly. The Severity field
                        MUST be set only when Status=False.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - status
                  - type
                  type: object
                type: array
              initialized:
                description: Initialized denotes whether or not the control plane
                  has the uploaded microk8s-config configmap.
                type: boolean
              observedGeneration:
                description: ObservedGeneration is the latest generation observed
                  by the controller.
                format: int64
                type: integer
              ready:
                description: Ready denotes that the MicroK8sControlPlane API Server
                  is ready to receive requests.
                type: boolean
              readyReplicas:
                description: Total number of fully running and ready control plane
                  machines.
                format: int32
                type: integer
              replicas:
                description: Total number of non-terminated machines targeted by this
                  control plane (their labels match the selector).
                format: int32
                type: integer
              selector:
                description: 'INSERT ADDITIONAL STATUS FIELD - define observed state
                  of cluster Important: Run "make" to regenerate code after modifying
                  this file Selector is the label selector in string format to avoid
                  introspection by clients, and is used to provide the CRD-based integration
                  for the scale subresource and additional integrations for things
                  like kubectl describe.. The string will be in the same format as
                  the query-param syntax. More info about label selectors: http://kubernetes.io/docs/user-guide/labels#label-selectors'
                type: string
              unavailableReplicas:
                description: Total number of unavailable machines targeted by this
                  control plane. This is the total number of machines that are still
                  required for the deployment to have 100% available capacity. They
                  may either be machines that are running but not yet ready or machines
                  that still have not been created.
                format: int32
                type: integer
            type: object
        type: object
    served: true
    storage: true
    subresources:
      scale:
        labelSelectorPath: .status.selector
        specReplicasPath: .spec.replicas
        statusReplicasPath: .status.replicas
      status: {}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: capi-microk8s-control-plane-controller-manager
  namespace: capi-microk8s-control-plane-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: capi-microk8s-control-plane-leader-election-role
  namespace: capi-microk8s-control-plane-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  creationTimestamp: null
  name: capi-microk8s-control-plane-manager-role
  namespace: capi-microk8s-control-plane-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - create
  - get
  - list
  - watch
- apiGroups:
  - rbac
  resources:
  - rolebindings
  verbs:
  - create
  - get
  - list
  - watch
- apiGroups:
  - rbac
  resources:
  - roles
  verbs:
  - create
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  name: capi-microk8s-control-plane-manager-role
rules:
- apiGroups:
  - bootstrap.cluster.x-k8s.io
  - controlplane.cluster.x-k8s.io
  - infrastructure.cluster.x-k8s.io
  resources:
  - '*'
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - cluster.x-k8s.io
  resources:
  - clusters
  - clusters/status
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cluster.x-k8s.io
  resources:
  - machines
  - machines/status
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - get
  - list
  - patch
  - watch
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: capi-microk8s-control-plane-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: capi-microk8s-control-plane-proxy-role
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: capi-microk8s-control-plane-leader-election-rolebinding
  namespace: capi-microk8s-control-plane-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: capi-microk8s-control-plane-leader-election-role
subjects:
- kind: ServiceAccount
  name: capi-microk8s-control-plane-controller-manager
  namespace: capi-microk8s-control-plane-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: capi-microk8s-control-plane-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: capi-microk8s-control-plane-manager-role
subjects:
- kind: ServiceAccount
  name: capi-microk8s-control-plane-controller-manager
  namespace: capi-microk8s-control-plane-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: capi-microk8s-control-plane-proxy-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: capi-microk8s-control-plane-proxy-role
subjects:
- kind: ServiceAccount
  name: capi-microk8s-control-plane-controller-manager
  namespace: capi-microk8s-control-plane-system
---
apiVersion: v1
data:
  controller_manager_config.yaml: |
    apiVersion: controller-runtime.sigs.k8s.io/v1alpha1
    kind: ControllerManagerConfig
    health:
      healthProbeBindAddress: :8081
    metrics:
      bindAddress: 127.0.0.1:8080
    webhook:
      port: 9443
    leaderElection:
      leaderElect: true
      resourceName: 43109c0a.cluster.x-k8s.io
kind: ConfigMap
metadata:
  name: capi-microk8s-control-plane-manager-config
  namespace: capi-microk8s-control-plane-system
---
apiVersion: v1
kind: Service
metadata:
  labels:
    control-plane: controller-manager
  name: capi-microk8s-control-plane-controller-manager-metrics-service
  namespace: capi-microk8s-control-plane-system
spec:
  ports:
  - name: https
    port: 8443
    protocol: TCP
    targetPort: https
  selector:
    control-plane: controller-manager
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    control-plane: controller-manager
  name: capi-microk8s-control-plane-controller-manager
  namespace: capi-microk8s-control-plane-system
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: controller-manager
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        control-plane: controller-manager
    spec:
      containers:
      - args:
        - --secure-listen-address=0.0.0.0:8443
        - --upstream=http://127.0.0.1:8080/
        - --logtostderr=true
        - --v=0
        image: gcr.io/kubebuilder/kube-rbac-proxy:v0.8.0
        name: kube-rbac-proxy
        ports:
        - containerPort: 8443
          name: https
          protocol: TCP
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 5m
            memory: 64Mi
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=127.0.0.1:8080
        - --leader-elect
        command:
        - /manager
        image: docker.io/cdkbot/capi-control-plane-provider-microk8s:0.5.0
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 10m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
      securityContext:
        runAsNonRoot: true
      serviceAccountName: capi-microk8s-control-plane-controller-manager
      terminationGracePeriodSeconds: 10
