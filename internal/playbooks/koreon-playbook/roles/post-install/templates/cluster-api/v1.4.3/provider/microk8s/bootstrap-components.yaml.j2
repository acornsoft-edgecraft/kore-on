---
apiVersion: v1
kind: Namespace
metadata:
  labels:
    control-plane: controller-manager
  name: capi-microk8s-bootstrap-system
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  labels:
    cluster.x-k8s.io/provider: bootstrap-microk8s
    cluster.x-k8s.io/v1beta1: v1beta1
  name: microk8sconfigs.bootstrap.cluster.x-k8s.io
spec:
  group: bootstrap.cluster.x-k8s.io
  names:
    kind: MicroK8sConfig
    listKind: MicroK8sConfigList
    plural: microk8sconfigs
    singular: microk8sconfig
  scope: Namespaced
  versions:
  - name: v1beta1
    schema:
      openAPIV3Schema:
        description: MicroK8sConfig is the Schema for the microk8sconfigs API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: MicroK8sConfigSpec defines the desired state of MicroK8sConfig
            properties:
              clusterConfiguration:
                description: InitConfiguration along with ClusterConfiguration are the configurations necessary for the init command
                properties:
                  apiVersion:
                    description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                    type: string
                  kind:
                    description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  portCompatibilityRemap:
                    default: true
                    description: PortCompatibilityRemap switches the default ports used by cluster agent (25000) and dqlite (19001) to 30000 and 2379. The default ports are blocked via security groups in several infra providers.
                    type: boolean
                type: object
              initConfiguration:
                properties:
                  IPinIP:
                    description: The optional IPinIP configuration
                    type: boolean
                  addons:
                    description: List of addons to be enabled upon cluster creation
                    items:
                      type: string
                    type: array
                  apiVersion:
                    description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                    type: string
                  confinement:
                    description: The confinement (strict or classic) configuration
                    enum:
                    - classic
                    - strict
                    type: string
                  extraKubeletArgs:
                    description: ExtraKubeletArgs is a list of extra arguments to add to the kubelet.
                    items:
                      type: string
                    type: array
                  extraWriteFiles:
                    description: ExtraWriteFiles is a list of extra files to inject with cloud-init.
                    items:
                      description: CloudInitWriteFile is a file that will be injected by cloud-init
                      properties:
                        content:
                          description: Content of the file to create.
                          type: string
                        owner:
                          description: Owner of the file to create, e.g. "root:root"
                          type: string
                        path:
                          description: Path where the file should be created.
                          type: string
                        permissions:
                          description: Permissions of the file to create, e.g. "0600"
                          type: string
                      required:
                      - content
                      - owner
                      - path
                      - permissions
                      type: object
                    type: array
                  httpProxy:
                    description: The optional http proxy configuration
                    type: string
                  httpsProxy:
                    description: The optional https proxy configuration
                    type: string
                  joinTokenTTLInSecs:
                    default: 315569260
                    description: The join token will expire after the specified seconds, defaults to 10 years
                    format: int64
                    minimum: 1
                    type: integer
                  kind:
                    description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  noProxy:
                    description: The optional no proxy configuration
                    type: string
                  riskLevel:
                    default: stable
                    description: The risk-level (stable, candidate, beta, or edge) for the snaps
                    enum:
                    - stable
                    - candidate
                    - beta
                    - edge
                    type: string
                type: object
            type: object
          status:
            description: MicroK8sConfigStatus defines the observed state of MicroK8sConfig
            properties:
              conditions:
                description: Conditions provide observations of the operational state of a Cluster API resource.
                items:
                  description: Condition defines an observation of a Cluster API resource operational state.
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status to another. This should be when the underlying condition changed. If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about the transition. This field may be empty.
                      type: string
                    reason:
                      description: The reason for the condition's last transition in CamelCase. The specific API may choose whether or not this field is considered a guaranteed API. This field may not be empty.
                      type: string
                    severity:
                      description: Severity provides an explicit classification of Reason code, so the users or machines can immediately understand the current situation and act accordingly. The Severity field MUST be set only when Status=False.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase. Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be useful (see .node.status.conditions), the ability to deconflict is important.
                      type: string
                  required:
                  - lastTransitionTime
                  - status
                  - type
                  type: object
                type: array
              dataSecretName:
                description: DataSecretName is the name of the secret that stores the bootstrap data script.
                type: string
              failureMessage:
                description: FailureMessage will be set on non-retryable errors
                type: string
              failureReason:
                description: FailureReason will be set on non-retryable errors
                type: string
              observedGeneration:
                description: ObservedGeneration is the latest generation observed by the controller.
                format: int64
                type: integer
              ready:
                description: Ready indicates the BootstrapData field is ready to be consumed
                type: boolean
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  labels:
    cluster.x-k8s.io/provider: bootstrap-microk8s
    cluster.x-k8s.io/v1beta1: v1beta1
  name: microk8sconfigtemplates.bootstrap.cluster.x-k8s.io
spec:
  group: bootstrap.cluster.x-k8s.io
  names:
    kind: MicroK8sConfigTemplate
    listKind: MicroK8sConfigTemplateList
    plural: microk8sconfigtemplates
    singular: microk8sconfigtemplate
  scope: Namespaced
  versions:
  - name: v1beta1
    schema:
      openAPIV3Schema:
        description: MicroK8sConfigTemplate is the Schema for the microk8sconfigtemplates API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: MicroK8sConfigTemplateSpec defines the desired state of MicroK8sConfigTemplate
            properties:
              template:
                properties:
                  spec:
                    description: MicroK8sConfigSpec defines the desired state of MicroK8sConfig
                    properties:
                      clusterConfiguration:
                        description: InitConfiguration along with ClusterConfiguration are the configurations necessary for the init command
                        properties:
                          apiVersion:
                            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                            type: string
                          kind:
                            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                            type: string
                          portCompatibilityRemap:
                            default: true
                            description: PortCompatibilityRemap switches the default ports used by cluster agent (25000) and dqlite (19001) to 30000 and 2379. The default ports are blocked via security groups in several infra providers.
                            type: boolean
                        type: object
                      initConfiguration:
                        properties:
                          IPinIP:
                            description: The optional IPinIP configuration
                            type: boolean
                          addons:
                            description: List of addons to be enabled upon cluster creation
                            items:
                              type: string
                            type: array
                          apiVersion:
                            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                            type: string
                          confinement:
                            description: The confinement (strict or classic) configuration
                            enum:
                            - classic
                            - strict
                            type: string
                          extraKubeletArgs:
                            description: ExtraKubeletArgs is a list of extra arguments to add to the kubelet.
                            items:
                              type: string
                            type: array
                          extraWriteFiles:
                            description: ExtraWriteFiles is a list of extra files to inject with cloud-init.
                            items:
                              description: CloudInitWriteFile is a file that will be injected by cloud-init
                              properties:
                                content:
                                  description: Content of the file to create.
                                  type: string
                                owner:
                                  description: Owner of the file to create, e.g. "root:root"
                                  type: string
                                path:
                                  description: Path where the file should be created.
                                  type: string
                                permissions:
                                  description: Permissions of the file to create, e.g. "0600"
                                  type: string
                              required:
                              - content
                              - owner
                              - path
                              - permissions
                              type: object
                            type: array
                          httpProxy:
                            description: The optional http proxy configuration
                            type: string
                          httpsProxy:
                            description: The optional https proxy configuration
                            type: string
                          joinTokenTTLInSecs:
                            default: 315569260
                            description: The join token will expire after the specified seconds, defaults to 10 years
                            format: int64
                            minimum: 1
                            type: integer
                          kind:
                            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                            type: string
                          noProxy:
                            description: The optional no proxy configuration
                            type: string
                          riskLevel:
                            default: stable
                            description: The risk-level (stable, candidate, beta, or edge) for the snaps
                            enum:
                            - stable
                            - candidate
                            - beta
                            - edge
                            type: string
                        type: object
                    type: object
                type: object
            required:
            - template
            type: object
          status:
            description: MicroK8sConfigTemplateStatus defines the observed state of MicroK8sConfigTemplate
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: capi-microk8s-bootstrap-controller-manager
  namespace: capi-microk8s-bootstrap-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: capi-microk8s-bootstrap-leader-election-role
  namespace: capi-microk8s-bootstrap-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  name: capi-microk8s-bootstrap-manager-role
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  - secrets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - bootstrap.cluster.x-k8s.io
  resources:
  - microk8sconfigs
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - bootstrap.cluster.x-k8s.io
  resources:
  - microk8sconfigs/finalizers
  verbs:
  - update
- apiGroups:
  - bootstrap.cluster.x-k8s.io
  resources:
  - microk8sconfigs/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - cluster.x-k8s.io
  resources:
  - clusters
  - clusters/finalizers
  - clusters/status
  - machines
  - machines/finalizers
  - machines/status
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: capi-microk8s-bootstrap-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: capi-microk8s-bootstrap-proxy-role
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: capi-microk8s-bootstrap-leader-election-rolebinding
  namespace: capi-microk8s-bootstrap-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: capi-microk8s-bootstrap-leader-election-role
subjects:
- kind: ServiceAccount
  name: capi-microk8s-bootstrap-controller-manager
  namespace: capi-microk8s-bootstrap-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: capi-microk8s-bootstrap-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: capi-microk8s-bootstrap-manager-role
subjects:
- kind: ServiceAccount
  name: capi-microk8s-bootstrap-controller-manager
  namespace: capi-microk8s-bootstrap-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: capi-microk8s-bootstrap-proxy-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: capi-microk8s-bootstrap-proxy-role
subjects:
- kind: ServiceAccount
  name: capi-microk8s-bootstrap-controller-manager
  namespace: capi-microk8s-bootstrap-system
---
apiVersion: v1
data:
  controller_manager_config.yaml: |
    apiVersion: controller-runtime.sigs.k8s.io/v1beta1
    kind: ControllerManagerConfig
    health:
      healthProbeBindAddress: :8081
    metrics:
      bindAddress: 127.0.0.1:8080
    webhook:
      port: 9443
    leaderElection:
      leaderElect: true
      resourceName: 1dc6fe6e.bootstrap.cluster.x-k8s.io
kind: ConfigMap
metadata:
  name: capi-microk8s-bootstrap-manager-config
  namespace: capi-microk8s-bootstrap-system
---
apiVersion: v1
kind: Service
metadata:
  labels:
    control-plane: controller-manager
  name: capi-microk8s-bootstrap-controller-manager-metrics-service
  namespace: capi-microk8s-bootstrap-system
spec:
  ports:
  - name: https
    port: 8443
    protocol: TCP
    targetPort: https
  selector:
    control-plane: controller-manager
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    control-plane: controller-manager
  name: capi-microk8s-bootstrap-controller-manager
  namespace: capi-microk8s-bootstrap-system
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: controller-manager
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        control-plane: controller-manager
    spec:
      containers:
      - args:
        - --secure-listen-address=0.0.0.0:8443
        - --upstream=http://127.0.0.1:8080/
        - --logtostderr=true
        - --v=0
        image: gcr.io/kubebuilder/kube-rbac-proxy:v0.8.0
        name: kube-rbac-proxy
        ports:
        - containerPort: 8443
          name: https
          protocol: TCP
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 5m
            memory: 64Mi
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=127.0.0.1:8080
        - --leader-elect
        command:
        - /manager
        image: docker.io/cdkbot/capi-bootstrap-provider-microk8s:0.5.0
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 10m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
      securityContext:
        runAsNonRoot: true
      serviceAccountName: capi-microk8s-bootstrap-controller-manager
      terminationGracePeriodSeconds: 10
