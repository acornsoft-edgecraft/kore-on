---
- name: Install containerd (Centos, RedHat)
  when:
    - ansible_distribution in ["CentOS", "RedHat"]
    - not closed_network
  yum:
    name: "{{ containerd_io }}"
    state: present
    update_cache: yes
    enablerepo: Docker-CE-Stable
    disable_gpg_check: yes

- name: Install containerd (Centos, RedHat)
  when:
    - ansible_distribution in ["CentOS", "RedHat"]
    - closed_network
  yum:
    name: "{{ containerd_io }}"
    state: present
    disablerepo: "*"
    enablerepo: "local-repo"
    disable_gpg_check: yes

## cri-tools(kubeadm에 종속되어 있는 패키지 임) 패키지에 있어서 주석 처리함
# https://github.com/kubernetes-sigs/cri-tools/releases/download/v1.21.0/crictl-v1.21.0-linux-amd64.tar.gz
# - name: Get crictl tgz file and uncompress it
#   unarchive:
#     src: "{{ playbook_dir }}/download/crictl-{{ package_crictl_version }}-{{ ansible_system | lower }}-amd64.tar.gz"
#     dest: /usr/bin
#     owner: "root"
#     group: "root"
#   when:
#     - closed_network
  
# - name: Get crictl tgz file  on online and uncompress it
#   block:
#     - name: Download crictl binary
#       ansible.builtin.get_url:
#         url: "{{ crictl_get_url }}"
#         dest: "/tmp"
#       any_errors_fatal: true
#     - name: Get crictl tgz file and uncompress it
#       unarchive:
#         src: "/tmp/crictl-{{ package_crictl_version }}-{{ ansible_system | lower }}-amd64.tar.gz"
#         dest: /usr/bin
#         owner: "root"
#         group: "root"
#         remote_src: True
#   when:
#     - not closed_network

- name: Create containerd directory
  file:
    path: /etc/containerd/certs.d/{{ item }}
    state: directory
  with_items:
    - "{{ registry_domain }}"
  when:
    - closed_network

- name: Create containerd directory
  file:
    path: /etc/containerd/certs.d/{{ item | split('/') | first }}
    state: directory
  with_items:
    - "{{ prepare_airgap_images }}"
  when:
    - closed_network

- name: Add containerd config for mirrors
  ansible.builtin.copy:
    dest: /etc/containerd/certs.d/{{ item }}/hosts.toml
    content: |
      server = "https://{{ item }}"

      [host."https://{{ item }}"]
        ca = "/etc/docker/certs.d/{{ item }}/ca.crt"
  with_items:
    - "{{ registry_domain }}"
  when:
    - closed_network

- name: Add containerd config for mirrors
  ansible.builtin.copy:
    dest: /etc/containerd/certs.d/{{ item | split('/') | first }}/hosts.toml
    content: |
      server = "https://{{ item | split('/') | first }}"

      [host."https://{{ registry_domain }}/v2/{{ item | split('/') | first }}/"]
        capabilities = ["pull", "resolve"]
        ca = "/etc/docker/certs.d/{{ registry_domain }}/ca.crt"
        override_path = true
  with_items:
    - "{{ prepare_airgap_images }}"
  when:
    - closed_network

- name: Copy containerd config file
  template:
    src: config-1.7.toml.j2
    dest: "/etc/containerd/config.toml"
    owner: "root"
    mode: 0644

- name: Enable containerd
  ansible.builtin.systemd:
    name: containerd
    state: restarted
    daemon_reload: true
    enabled: true

- name: Configure crictl.yaml
  copy:
    dest: /etc/crictl.yaml
    content: |-
      runtime-endpoint: unix:///run/containerd/containerd.sock
      image-endpoint: unix:///run/containerd/containerd.sock
      timeout: 10
