---
# For ubuntu
- name: Install containerd (Ubuntu, Debian)
  when:
    - ansible_distribution in ["Ubuntu", "Debian"]
  apt:
    name: "{{ containerd_io }}"
    state: present

- name: Hold containerd version
  when: ansible_distribution in ["Ubuntu", "Debian"]
  dpkg_selections:
    name: containerd.io
    selection: hold

- name: Create containerd directory
  file:
    path: /etc/containerd/certs.d/{{ item }}
    state: directory
    mode: "0755"
  with_items:
    - "{{ registry_domain }}"
  when:
    - closed_network
    
- name: Create containerd directory
  file:
    path: /etc/containerd/certs.d/{{ item | split('/') | first }}
    state: directory
    mode: "0755"
  with_items:
    - "{{ prepare_airgap_images }}"
  when:
    - closed_network

- name: Add containerd config for mirrors
  ansible.builtin.copy:
    dest: /etc/containerd/certs.d/{{ item }}/hosts.toml
    mode: "0644"
    content: |
      server = "https://{{ item }}"

      [host."https://{{ item }}"]
        ca = "/etc/docker/certs.d/{{ item }}/ca.crt"
  with_items:
    - "{{ registry_domain }}"
  when:
    - closed_network

- name: Add containerd config for mirrors
  ansible.builtin.copy:
    dest: /etc/containerd/certs.d/{{ item | split('/') | first }}/hosts.toml
    mode: "0644"
    content: |
      server = "https://{{ item | split('/') | first }}"

      [host."https://{{ registry_domain }}/v2/{{ item | split('/') | first }}/"]
        capabilities = ["pull", "resolve"]
        ca = "/etc/docker/certs.d/{{ registry_domain }}/ca.crt"
        override_path = true
  with_items:
    - "{{ prepare_airgap_images }}"
  when:
    - closed_network

- name: Copy containerd config file
  template:
    src: config-1.7.toml.j2
    dest: "/etc/containerd/config.toml"
    owner: "root"
    mode: 0644

- name: Enable containerd
  systemd:
    name: containerd
    state: restarted
    daemon_reload: yes
    enabled: yes

- name: Configure crictl.yaml
  copy:
    dest: /etc/crictl.yaml
    mode: "0644"
    content: |-
      runtime-endpoint: unix:///run/containerd/containerd.sock
      image-endpoint: unix:///run/containerd/containerd.sock
      timeout: 10

- name: Registry Private (used domain or ip address)
  include_tasks: registry-private.yaml
  when:
    - inventory_hostname in groups['cluster']
    - not registry_install
    - registry_domain != ""

- name: Registry Mirror
  include_tasks: registry-mirror.yaml
  when:
    - inventory_hostname in groups['cluster']
    - registry_mirror
    - not registry_install
    - registry_domain != ""