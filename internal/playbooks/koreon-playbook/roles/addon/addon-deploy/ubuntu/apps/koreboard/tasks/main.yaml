---
- name: Add Helm charts repository
  vars:
    Name: "{{ ChartRef | split('//') | last }}"
    CaFile: "/etc/docker/certs.d/{{ Name | split('/') | first }}/ca.crt"
  command: |
    helm repo add "{{ ChartRefName }}" "{{ ChartRef }}"
    --ca-file "{{ CaFile }}"
  delegate_to: "{{ groups['masters'][0] }}"
  when:
    - Addon.ClosedNetwork

# Create Package directory
- name: Addon | Create addon directory
  ansible.builtin.file:
    path: "{{ Addon.AddonDataDir }}/{{ ChartName }}"
    state: directory
    owner: root
    group: root
    mode: "0755"
    
- name: Addon | copy {{ ChartName }} values file
  template:
    src: "{{ item.src }}"
    dest: "{{ Addon.AddonDataDir }}/{{ item.dest }}"
    backup: true
    mode: 0644
  with_items:
    - { src: "values.yaml.j2", dest: "{{ ChartName }}/values.yaml" }
  delegate_to: "{{ groups['masters'][0] }}"
  run_once: true

# - name: Addon | deployment koreboard
#   kubernetes.core.helm:
#     name: koreboard
#     kubeconfig: "{{ Addon.KubeConfig }}"
#     chart_ref: "{{ ChartRef is search('.tgz') | ternary(ChartRef, ChartRefName + '/' + ChartName) }}"
#     release_namespace: monitoring
#     create_namespace: true
#     update_repo_cache: "{{ ChartRef is search('.tgz') | ternary(false, true) }}"
#     disable_hook: True
#     atomic: true
#     values_files:
#       - "{{ Addon.AddonDataDir }}/koreboard/values.yaml"
#   run_once: true

- name: Addon | deployment {{ ChartName }}
  command: |
    helm upgrade -i --reset-values --atomic --no-hooks --create-namespace 
    --kubeconfig "{{ Addon.KubeConfig }}"
    --namespace {{ Addon.ReleaseNamespace | default('monitoring') }}
    --values="{{ Addon.AddonDataDir }}/{{ ChartName }}/values.yaml"
    "{{ ChartName }}" 
    "{{ ChartRef is search('.tgz') | ternary(ChartRef, ChartRefName + '/' + ChartName) }}"
  delegate_to: "{{ groups['masters'][0] }}"
  run_once: true