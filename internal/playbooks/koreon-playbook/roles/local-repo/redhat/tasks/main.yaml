---
# Extract rpm/deb archived files and start nginx service for serving to all nodes ---
- name: disable selinux
  selinux:
    policy: targeted
    state: disabled
  #no_log: true

- name: Create local repository directory
  file:
    path: "{{ data_root_dir }}/localrepo"
    state: directory

- name: Check local-repo tgz existence
  stat:
    path: "/tmp/{{ local_repository_archive_file | basename }}"
  register: local_repo_archived_file

- name: Upload local-repo archived file
  copy:
    src: "{{ playbook_dir }}/files/{{ local_repository_archive_file | basename }}"
    dest: "/tmp/{{ local_repository_archive_file | basename }}"
  when:
    - not local_repo_archived_file.stat.exists

- name: Extract local repository archive file into /data/localrepo
  unarchive:
    src: "/tmp/{{ local_repository_archive_file | basename }}"
    dest: "{{ data_root_dir }}/localrepo"
    remote_src: yes
    owner: "root"
    group: "root"
    creates: "{{ data_root_dir }}/localrepo/repodata"
# # ---------------------------------------------------------------------------------

# # Add local repo ------------------------------------------------------------------
- name: Backup /etc/yum.repos.d directory
  ansible.builtin.copy:
    remote_src: true
    src: "/etc/yum.repos.d"
    dest: "/etc/yum.repos.d.back-{{ ansible_date_time.iso8601_basic_short }}"

- name: Remove /etc/yum.repos.d directory
  ansible.builtin.file:
    path: "/etc/yum.repos.d"
    state: absent

- name: Create /etc/yum.repos.d directory
  ansible.builtin.file:
    path: "/etc/yum.repos.d"
    state: directory
    owner: root
    group: root
    mode: "0644"

- name: Add local repo for create nginx
  yum_repository:
    name: local-to-file
    description: "Local Repo configure for nginx server"
    baseurl: "file:///data/localrepo"
  notify: yum-clean-metadata

- name: Install nginx server for local repository
  ansible.builtin.yum:
    name: nginx
    disablerepo: "*"
    enablerepo: local-to-file
    state: latest

- name: Update nginx.conf
  ansible.builtin.replace:
    path: /etc/nginx/nginx.conf
    regexp: "{{ item.From }}"
    replace: "{{ item.To }}"
    owner: root
    group: root
    mode: '0644'
  with_items:
    - { From: ' 80;', To: ' {{ local_repository_port }};' }
    - { From: ':80;', To: ':{{ local_repository_port }};' }
    - { From: '/usr/share/nginx/html', To: '{{ data_root_dir }}/localrepo' }

- name: Start and enable nginx
  ansible.builtin.service:
    name: nginx
    enabled: yes
    state: restarted

- name: Add local repository
  yum_repository:
    name: local-repo
    description: "Local Repo configure"
    gpgcheck: false
    baseurl: "{{ (local_repository_url == '') | ternary('http://' + registry_ip + ':' + (local_repository_port | string), local_repository_url, omit) }}"
  notify: yum-clean-metadata

- name: Remove repository (and clean up left-over metadata)
  yum_repository:
    name: local-to-file
    state: absent
  notify: yum-clean-metadata