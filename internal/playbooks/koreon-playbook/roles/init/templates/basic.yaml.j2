#- [koreon]
## Required
## - local-repository-install: local repository installation activate. (Required when selecting the closed network.)
## - local-repository-port: Port number used as local repository. (Required when selecting the closed network.)
##                          If you use the default value, you can skip it. (default: 8080)
## - local-repository-archive-file: local repository packages archive file path (Required when selecting the closed network.)
## - local-repository-url: local repository 서비스 url (Required when selecting the closed network.)
##                         If you are installing a local repository, you can skip it.
## Optional
## - cluster-name: use cluster name in config context (default: "kubernetes")
## - install-dir: installation scripts(harbor, shell scripts) save directory (default: "/var/lib/kore-on")
## - cert-validity-days: SSL validity days(default: 36500)
## - debug-mode: verbose 옵션 사용 여부 선택 (default: false)
## - closed-network: Air Gap 선언 (default: false)
cluster_name: {{ (KoreOn.ClusterName == "") | ternary("kubernetes", KoreOn.ClusterName) }}
install_dir: {{ (KoreOn.InstallDir == "") | ternary("/var/lib/kore-on", KoreOn.InstallDir) }}
cert_validity_days: {{ (KoreOn.CertValidityDays == 0) | ternary(36500, KoreOn.CertValidityDays) }}
debug_mode: {{ KoreOn.DebugMode }}
closed_network: {{ KoreOn.ClosedNetwork }}
local_repository_install: {{ KoreOn.LocalRepositoryInstall }}
local_repository_port: {{ (KoreOn.LocalRepositoryPort == 0) | ternary(8080, KoreOn.LocalRepositoryPort) }}
local_repository_archive_file: {{ KoreOn.LocalRepositoryArchiveFile }}
local_repository_url: {{ (KoreOn.LocalRepositoryUrl == "") | ternary("''", KoreOn.LocalRepositoryUrl) }}
koreon_image_archive: {{ KoreOn.ImageArchive }}
#-end [koreon]

#- [kubernetes]
## Required
## - k8s_version: kubernetes version (default: "latest")
## optional
## - cluster_id: use cluster id in node/kubelet labelling  (default: "kubernetes")
## - container_runtime: use k8s cri (only: "containerd")
## - kube_proxy_mode: use k8s proxy mode [iptables | ipvs] (default: "ipvs")
## - service_ip_range: k8s service network cidr (default: "10.96.0.0/20")
## - pod_ip_range: k8s pod network cidr (default: "10.4.0.0/24")
## - node_port_range: k8s node port network range (default: "30000-32767")
## - api-sans: k8s apiserver SAN 추가 [--apiserver-cert-extra-sans 설정과 동일] (default: master[0] ip address)
k8s_version: {{ (Kubernetes.Version == "") | ternary("v1.23.12", Kubernetes.Version) }}
cluster_id: {{ (KoreOn.ClusterName == "") | ternary("kubernetes", KoreOn.ClusterName) }}
container_runtime: {{ (Kubernetes.ContainerRuntime == "") | ternary("containerd", Kubernetes.ContainerRuntime) }}
kube_proxy_mode: {{ (Kubernetes.KubeProxyMode == "") | ternary("ipvs", Kubernetes.KubeProxyMode) }}
service_ip_range: {{ (Kubernetes.ServiceCidr == "") | ternary("10.96.0.0/20", Kubernetes.ServiceCidr) }}
pod_ip_range: {{ (Kubernetes.PodCidr == "") | ternary("10.4.0.0/20", Kubernetes.PodCidr) }}
node_port_range: {{ (Kubernetes.NodePortRange == "") | ternary("30000-32767", Kubernetes.NodePortRange) }}
audit_log_enable: {{ (Kubernetes.AuditLogEnable == None) | ternary(true, Kubernetes.AuditLogEnable) }}
api_sans: {{ (Kubernetes.ApiSans == None) | ternary([NodePool.Master.IP[0]], Kubernetes.ApiSans) }}
#-end [kubernetes]

#- [kubernetes.etcd]
## Required
## - 
## external-etcd: used external etcd than input the ip and private-ip address (default: false)
##                not used than skip ip address. it is used control plane nodes as automatic.
external_etcd: {{ Kubernetes.Etcd.ExternalEtcd }}
external_etcd_ip: {{ ((Kubernetes.Etcd.IP != None) and (Kubernetes.Etcd.IP | length > 0))  | ternary(Kubernetes.Etcd.IP, [""]) }}
external_etcd_private_ip: {{ ((Kubernetes.Etcd.PrivateIP != None) and (Kubernetes.Etcd.PrivateIP | length > 0))  | ternary(Kubernetes.Etcd.PrivateIP, [""]) }}
#-end [kubernetes.etcd]

#- [kubernetes.calico]
## Required
## - 
## Optional
## - calico_version: input calico version (default: "latest")
## - vxlan_mode: Calico network mode (default: false)
calico_version: {{ SupportVersion.ImageVersion.Calico | regex_replace('^v([0-9])+\\.([0-9]+)\\.[0-9]+', 'v\\1.\\2') }}
vxlan_mode: {{ Kubernetes.Calico.VxlanMode }}
#-end [kubernetes.calico]

#- [node-pool]
## Required
## - 
## Optional
## - data_root_dir: data(backup, docker, log, kubelet, etcd, k8s-audit, containerd) root dir (default: "/data") 
data_root_dir: {{ (NodePool.DataDir == "") | ternary("/data", NodePool.DataDir) }}
#-end [node-pool]

#- [node-pool.master]
## Required
## - 
## Optional
## - master_isolated: k8s controll plane nodes isolation (default: fasle)
## - haproxy: used internal load-balancer (default: true)
## - lb-ip: Enter the IP address when using a load balancer (default: master[0] ip address)
## - lb-port: Enter the port when using a load balancer (default: "6443")
## - api_lb_ip: authmatic input (only: lb_ip:lb_port)
master_isolated: {{ NodePool.Master.Isolated }}
haproxy: {{ NodePool.Master.HaproxyInstall }}
lb_ip: {{ (NodePool.Master.LbIP == "" and NodePool.Master.IP != None) | ternary(NodePool.Master.IP[0], NodePool.Master.LbIP) }}
lb_port: {{ (NodePool.Master.LbPort == 0) | ternary(6443, NodePool.Master.LbPort) }}
api_lb_ip: {{ (NodePool.Master.LbIP == "" and NodePool.Master.IP != None) | ternary(NodePool.Master.IP[0], NodePool.Master.LbIP) }}:{{ (NodePool.Master.LbPort == 0) | ternary(6443, NodePool.Master.LbPort) }}
#-end [node-pool.master]

#- [private-registry]
## Required
## - registry_version: private registry nodes ip address. This is a required entry used when installing a private registry.
##                    (this is using it to generate an extra vars)
## - registry: private registry nodes ip address. This is a required entry used when installing a private registry.
##             (this is using it to generate an inventory and extra vars)
## - registry_domain: K8s registry configuration (this is using it to generate an extra vars)
## Optional
## - registry_install: private registry install (default: false)
## - registry_data_dir: private registry data directory (default: "/data/harbor")
## - registry_archieve_file: registry archive file path (default: "")
## - registry_public_cert: public cert activate (default: false)
registry_install: {{ PrivateRegistry.Install }}
registry_version: {{ PrivateRegistry.RegistryVersion }}
registry_data_dir: {{ (PrivateRegistry.DataDir == "" ) | ternary("/data/harbor", PrivateRegistry.DataDir) }}
registry_ip: {{ (PrivateRegistry.RegistryIP == "") | ternary("''", PrivateRegistry.RegistryIP) }}
registry_domain: {{ (PrivateRegistry.RegistryDomain == "") | ternary("''", PrivateRegistry.RegistryDomain) }}
registry_archive_file: {{ (PrivateRegistry.RegistryArchiveFile == "") | ternary("''", PrivateRegistry.RegistryArchiveFile) }}
registry_public_cert: {{ PrivateRegistry.PublicCert }}
#-end [private-registry]


#- [private-registry.cert-file]
## Required
## -
## Optional
## - registry_ssl_ca: The certificate path used when using public-cert. (default: "")
## - registry_ssl_ca_key: The certificate-key used when using public-cert. (default: "")
registry_ssl_ca: {{ PrivateRegistry.CertFile.SslCertificate }}
registry_ssl_ca_key: {{ PrivateRegistry.CertFile.SslCertificateKey }}
#-end [private-registry.cert-file]


#- [shared-storage]
## Required
## - 
## Optional
storage_install: {{ SharedStorage.Install }}
storage_ip: {{ SharedStorage.StorageIP }}
shared_volume_dir: {{ (SharedStorage.VolumeDir == "") | ternary("/data/storage", SharedStorage.VolumeDir) }}
#-end [shared-storage]



#- [prepare-airgap]
## Required
## - k8s-version: private registry nodes ip address.
##                This is a required field used when the pre-preparation stage of the air gap network.
## - registry-version: Storage node ip address.
##                This is a required field used when the pre-preparation stage of the air gap network.
## - registry-ip: Private registry node ip address.
##                This is a required field used when the pre-preparation stage of the air gap network.
## Optional
## - 
prepare_airgap_k8s_version: {{ PrepareAirgap.K8sVersion }}
prepare_airgap_registry_version: {{ PrepareAirgap.RegistryVersion }}
prepare_airgap_registry_ip: {{ PrepareAirgap.RegistryIP }}
prepare_airgap_registry_data_dir: "/data"
prepare_airgap_registry_install_dir: "/var/lib/kore-on"

#- [supports packages/images]
## packages
{% for package in (SupportVersion.PackageVersion | dict2items) %}
package_{{ package.key | regex_replace('((?!^)|\\b[a-zA-Z][a-z]*)([A-Z][a-z]*|\\d+)', '\\1_\\2') | lower }}_version: {{ package.value}}
{% endfor %}
## images
{% for image in (SupportVersion.ImageVersion | dict2items) %}
image_{{ image.key | regex_replace('((?!^)|\\b[a-zA-Z][a-z]*)([A-Z][a-z]*|\\d+)', '\\1_\\2') | lower }}_version: {{ image.value}}
{% endfor %}
#-end [prepare-airgap]