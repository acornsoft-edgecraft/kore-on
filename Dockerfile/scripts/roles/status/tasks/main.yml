---
- name: Status | Check if etcd cluster is healthy
  shell: "etcdctl --write-out=table --endpoints={{ etcd_access_addresses }} endpoint status"
  register: etcd_status
  ignore_errors: false
  changed_when: false
  check_mode: no
  delegate_to: "{{ groups['masters'][0] }}"
  run_once: true
  tags:
    - facts
  environment:
    ETCDCTL_API: 3
    ETCDCTL_CACERT: "{{ etcd_ca_file }}"
    ETCDCTL_CERT: "{{ etcd_cert_file }}"
    ETCDCTL_KEY: "{{ etcd_key_file }}"

- name: Status | Get Cluster nodes
  shell: "kubectl --kubeconfig={{ kubeadminconfig }} get nodes -o wide"
  register: node_status
  delegate_to: "{{ groups['masters'][0] }}"
  run_once: true

- name: Status | Get kubernetes pods status
  shell: "kubectl --kubeconfig={{ kubeadminconfig }} get pods -n kube-system -o wide"
  register: k8s_pod_status
  delegate_to: "{{ groups['masters'][0] }}"
  run_once: true

- name: Status | Get Monitoring pod status
  when: monitoring
  shell: "kubectl --kubeconfig={{ kubeadminconfig }} get pods -n monitoring -o wide"
  register: monitoring_pod_status
  delegate_to: "{{ groups['masters'][0] }}"
  run_once: true

- debug:
    msg: "K8s api server: {{ api_lb_ip }}\n"
  run_once: true

- debug:
    msg: "etcd cluster healthy ... \n{{ etcd_status.stdout }}"
  run_once: true

- debug:
    msg: "node status ...\n{{ node_status.stdout }}"
  run_once: true

- debug:
    msg: "k8s pod status ...\n{{ k8s_pod_status.stdout }}"
  run_once: true

- debug:
    msg: "Monitoring pod status ...\n{{ monitoring_pod_status.stdout }}"
  run_once: true